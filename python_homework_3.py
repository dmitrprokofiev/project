#!/usr/bin/env python
# coding: utf-8

# In[1]:


# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их 
# деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на 
# ноль. 





a = int(input('Введите первое число'))
b = int(input('Введите второе число'))
def func(a, b):
    if b > 0:
        res = a / (b)
        return res
    else:
        print('Нельзя делить на ноль')
print(func(a, b))





#  Выполнить функцию, которая принимает несколько параметров, описывающих данные 
# пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция 
# должна принимать параметры как именованные аргументы. Осуществить вывод данных о 
# пользователе одной строкой. 




name = input('Введите имя')
firstname = input('Введите фамилию')
birthday = input('Введите год рождения')
hometown = input('Введите город проживания')
email = input('Введите email')
phone = input('Введите телефон')
def info(a, b, c, d, e, f):
    res = (f'{a} {b} {c} {d} {e} {f}')
    return res
print(info(a=name, b=firstname, c=birthday, d=hometown, e=email, f=phone))

# Реализовать функцию ​my_func()​, которая принимает три позиционных аргумента и 
#возвращает сумму наибольших двух аргументов. 




def my_func(x, y, z):
    l = []
    l.extend([x, y, z])
    l.pop(l.index(min(l)))
    k = l[0] + l[1]
    return k
my_func(x = 6, y = 8, z = 9)





#  Программа принимает действительное положительное число ​x и целое отрицательное число 
# y​. Выполните возведение числа ​x в степень ​y​. Задание реализуйте в виде функции 
# my_func(x, y)​. При решении задания нужно обойтись без встроенной функции возведения 
# числа в степень. 
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с 
# помощью оператора **. Второй — более сложная реализация без оператора **, 
# предусматривающая использование цикла. 





# первый способ
def my_func(x, y):
    return x ** y
print(my_func(6, -2))



#второй способ
def my_func(x, y):
    k = 1
    while y < 0:
        k = k * x
        y = y + 1
    return 1/k
print(my_func(6, -2))





#  Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии 
# Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, 
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет 
# добавляться к уже подсчитанной сумме. 
# Но если вместо числа вводится специальный символ, выполнение программы завершается. 
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму 
# этих чисел к полученной ранее сумме и после этого завершить программу. 




def my_sum ():
    sum_res = 0
    ex = False
    while ex == False:
        number = input("Ведите '/' для выхода из прораммы").split()

        res = 0
        for el in range(len(number)):
            if number[el] == '/':
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f'Сумма {sum_res}')
    print(f'Сумма {sum_res}')


my_sum() 




#  Реализовать функцию ​int_func()​, принимающую слова из маленьких латинских букв и 
# возвращающую их же, но с прописной первой буквой. Например, ​print(int_func(‘text’))​-> Text. 




def int_func(a):
    if a:
        return a[0].upper() + a[1:]
print(int_func('text'))





#  Продолжить работу над заданием. В программу должна попадать строка из слов, 
# разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно 
# сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
# Используйте написанную ранее функцию ​int_func()​. 





def int_func(a):
    return a.title()
int_func('hello world and sapce ')


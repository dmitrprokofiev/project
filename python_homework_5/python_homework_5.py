#!/usr/bin/env python
# coding: utf-8

# In[1]:


# 1. Создать программный файл в текстовом формате, записать в него построчно данные, 
# вводимые пользователем. Об окончании ввода данных будет свидетельствовать пустая 
# строка.


# In[4]:


lines = []
while True:
    text = input('Введите данные')
    lines.append(text)
    if not text:
        break
with open('text.txt', 'w') as file:
    for i in lines:
        file.write(i + '\n')


# In[ ]:


# 2. Создать текстовый файл (не программно), сохранить в нём несколько строк, выполнить 
# подсчёт строк и слов в каждой строке. 


# In[15]:


with open('strok.txt') as file:  
    stroki = 0
    words = 0
    c = 0
    for i in file:
        stroki += 1  
        words = words + len(i.split()) # подсчет строк во всем файле
        print('Количество слов в строке ' + str(len(i.split())))
print('Количество строк в файле ' + str(stroki))
print('Количество слов в файле ' + str(words))
# друой вариант для подстчета строк
with open('strok.txt') as file:
    a = len(file.readlines())  
print('Количество строк в файле ' + str(a))   


# In[3]:


# 3. Создать текстовый файл (не программно). Построчно записать фамилии сотрудников и 
# величину их окладов (не менее 10 строк). Определить, кто из сотрудников имеет оклад менее 
# 20 тысяч, вывести фамилии этих сотрудников. Выполнить подсчёт средней величины дохода 
# сотрудников. 

# Пример файла: 
# Иванов 23543.12 
# Петров 13749.32 


# In[55]:


with open('personal_oklad.txt') as file: 
    l = []
    zp = []
    for i in file:
        listing = i.split()
        l.append(listing[1])
        if int(listing[1]) < 20000:
            zp.append(listing[0])
    sum_zp = int(sum(map(int, l))/len(zp))
    print(f'Оклад меньше 20000 рублей имеют сотрудники {zp}')
    print(f'Средний доход составил {sum_zp} рублей')


# In[4]:


# 4. Создать (не программно) текстовый файл со следующим содержимым: 

# One — 1 
# Two — 2 
# Three — 3 
# Four — 4 
# Напишите программу, открывающую файл на чтение и считывающую построчно данные. При 
# этом английские числительные должны заменяться на русские. Новый блок строк должен 
# записываться в новый текстовый файл. 


# In[55]:


with open('eng_rus.txt') as file: 
    result = {'One' : 'Один', 'Two' : 'Два', 'Three' : 'Три', 'Four' : 'Четыре'}
    spisok = []
    data = file.readlines()
    for i in data:
        i = i.split()
        spisok.append(result[i[0]] + i[1] + i[2])
    print(spisok)

with open('eng_rus_2.txt', 'w') as file_2: 
    for n in spisok:
        n.split()
        file_2.writelines(n + '\n')


# In[5]:


# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, 
# разделённых пробелами. Программа должна подсчитывать сумму чисел в файле и выводить 
# её на экран. 


# In[87]:


with open('numbers.txt', 'w') as file: 
    n = []
    vvod = input('Введите набор чисел')
    n.append(vvod)
    file.writelines(n)
    numb = vvod.split() # готовый список
    result = [int(i) for i in numb]
    print('Сумма числе равна ' + str(sum(result)))


# In[1]:


# 6. Сформировать (не программно) текстовый файл. В нём каждая строка должна описывать 
# учебный предмет и наличие лекционных, практических и лабораторных занятий по предмету. 
# Сюда должно входить и количество занятий. Необязательно, чтобы для каждого предмета 
# были все типы занятий. 

# Сформировать словарь, содержащий название предмета и общее количество занятий по 
# нему. Вывести его на экран. 

# Примеры строк файла:                    Информатика:   100(л)   50(пр)   20(лаб). 

#                                         Физика:   30(л)   ​—​  10(лаб) 

#                                         Физкультура:   ​—   30(пр)   — 

# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30} 


# In[59]:


lesson = {}
with open('lesson.txt') as file:  
    for i in file:
        i = i.split()
        i[i.index('-')] = 0
        lesson[i[0]] = int(i[1]) + int(i[2]) + int(i[3])
    print(lesson)


# In[7]:


# 7. Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая 
# строка будет содержать данные о фирме: название, форма собственности, выручка, 
# издержки.  

# Пример строки файла: firm_1   ООО   10000   5000. 
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также 
# среднюю прибыль. Если фирма получила убытки, в расчёт средней прибыли её ​не включать​. 

# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а 
# также словарь со средней прибылью. Если фирма получила убытки, также добавить её в 
# словарь (со значением убытков).  

# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}]. 

# Итоговый список сохранить в виде json-объекта в соответствующий файл. 

# Пример json-объекта: 

# [{​"firm_1"​: ​5000​, ​"firm_2"​: 3​000​, ​"firm_3":​ ​1000​}, {​"average_profit"​: ​2000​}] 

# Подсказка: использовать менеджер контекста. 


# In[40]:


import json

firm = {}
average = {}
list_json = []
with open('firma.txt') as f:
    for i in f:
        i = i.split()
        firm[i[0]] = int(i[2]) - int(i[3])
        average["average_profit"] = int((int(i[2]) - int(i[3]))/3)
    list_json.append(firm)
    list_json.append(average)

with open('firma.json', 'w') as f_j:
    json.dump(list_json, f_j)


# In[41]:


with open('firma.json', 'r') as f_j:
    for i in f_j:
        print(i)

